{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seank\\\\Desktop\\\\coding-projects\\\\to-do-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Groups from './Groups';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [groups, setGroups] = React.useState([]);\n  const [selectedGroupId, setSelectedGroupId] = React.useState();\n  function addNewGroup() {\n    const newGroup = {\n      title: 'Untitled Group',\n      id: groups.length,\n      list: []\n    };\n    setGroups(prevGroups => [newGroup, ...prevGroups]);\n    setSelectedGroupId(newGroup.id);\n  }\n  function selectGroup(id) {\n    setSelectedGroupId(id);\n  }\n  function deleteGroup(groupToRemove) {\n    setGroups(prevGroups => {\n      return prevGroups.filter(group => group !== groupToRemove);\n    });\n  }\n  function handleTitleChange(groupId, newTitle) {\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        return groupId === group.id ? {\n          ...group,\n          title: newTitle\n        } : group;\n      });\n    });\n  }\n  function handleAddListItem(groupId, newListItem) {\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        return groupId === group.id ? {\n          ...group,\n          list: [newListItem, ...group.list]\n        } : group;\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Groups, {\n      deleteGroup: deleteGroup,\n      setSelectedGroupId: selectGroup,\n      selectedGroupId: selectedGroupId,\n      addNewGroup: addNewGroup,\n      changeTitle: handleTitleChange,\n      groups: groups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"14tcPZa3YQclMmHbeaa4t93fdNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Groups","jsxDEV","_jsxDEV","App","_s","groups","setGroups","useState","selectedGroupId","setSelectedGroupId","addNewGroup","newGroup","title","id","length","list","prevGroups","selectGroup","deleteGroup","groupToRemove","filter","group","handleTitleChange","groupId","newTitle","map","handleAddListItem","newListItem","className","children","changeTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/seank/Desktop/coding-projects/to-do-list/src/App.js"],"sourcesContent":["import React from 'react';\nimport Groups from './Groups';\n\n\nfunction App() {\n  const [groups, setGroups] = React.useState([])\n  const [selectedGroupId, setSelectedGroupId] = React.useState()\n\n  function addNewGroup() {\n    const newGroup = {\n      title: 'Untitled Group',\n      id: groups.length,\n      list: [],\n    }\n    setGroups(prevGroups => [newGroup, ...prevGroups])\n    setSelectedGroupId(newGroup.id)\n  }\n\n  function selectGroup(id) {\n    setSelectedGroupId(id)\n  }\n\n  function deleteGroup(groupToRemove) {\n    setGroups(prevGroups => {\n      return prevGroups.filter(group => group !== groupToRemove)\n    })\n  }\n\n  function handleTitleChange(groupId, newTitle) {\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        return groupId === group.id ? { ...group, title: newTitle } : group\n      })\n    })\n  }\n\n  function handleAddListItem(groupId, newListItem) {\n    setGroups(prevGroups => {\n      return prevGroups.map(group => {\n        return groupId === group.id ? {\n          ...group,\n          list: [newListItem, ...group.list]\n        } : group\n      })\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Groups\n        deleteGroup={deleteGroup}\n        setSelectedGroupId={selectGroup}\n        selectedGroupId={selectedGroupId}\n        addNewGroup={addNewGroup}\n        changeTitle={handleTitleChange}\n        groups={groups}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,KAAK,CAACQ,QAAQ,EAAE;EAE9D,SAASG,WAAWA,CAAA,EAAG;IACrB,MAAMC,QAAQ,GAAG;MACfC,KAAK,EAAE,gBAAgB;MACvBC,EAAE,EAAER,MAAM,CAACS,MAAM;MACjBC,IAAI,EAAE;IACR,CAAC;IACDT,SAAS,CAACU,UAAU,IAAI,CAACL,QAAQ,EAAE,GAAGK,UAAU,CAAC,CAAC;IAClDP,kBAAkB,CAACE,QAAQ,CAACE,EAAE,CAAC;EACjC;EAEA,SAASI,WAAWA,CAACJ,EAAE,EAAE;IACvBJ,kBAAkB,CAACI,EAAE,CAAC;EACxB;EAEA,SAASK,WAAWA,CAACC,aAAa,EAAE;IAClCb,SAAS,CAACU,UAAU,IAAI;MACtB,OAAOA,UAAU,CAACI,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAKF,aAAa,CAAC;IAC5D,CAAC,CAAC;EACJ;EAEA,SAASG,iBAAiBA,CAACC,OAAO,EAAEC,QAAQ,EAAE;IAC5ClB,SAAS,CAACU,UAAU,IAAI;MACtB,OAAOA,UAAU,CAACS,GAAG,CAACJ,KAAK,IAAI;QAC7B,OAAOE,OAAO,KAAKF,KAAK,CAACR,EAAE,GAAG;UAAE,GAAGQ,KAAK;UAAET,KAAK,EAAEY;QAAS,CAAC,GAAGH,KAAK;MACrE,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,SAASK,iBAAiBA,CAACH,OAAO,EAAEI,WAAW,EAAE;IAC/CrB,SAAS,CAACU,UAAU,IAAI;MACtB,OAAOA,UAAU,CAACS,GAAG,CAACJ,KAAK,IAAI;QAC7B,OAAOE,OAAO,KAAKF,KAAK,CAACR,EAAE,GAAG;UAC5B,GAAGQ,KAAK;UACRN,IAAI,EAAE,CAACY,WAAW,EAAE,GAAGN,KAAK,CAACN,IAAI;QACnC,CAAC,GAAGM,KAAK;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,oBACEnB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB3B,OAAA,CAACF,MAAM;MACLkB,WAAW,EAAEA,WAAY;MACzBT,kBAAkB,EAAEQ,WAAY;MAChCT,eAAe,EAAEA,eAAgB;MACjCE,WAAW,EAAEA,WAAY;MACzBoB,WAAW,EAAER,iBAAkB;MAC/BjB,MAAM,EAAEA;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAC9B,EAAA,CAvDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}